#######################################################################
#                                                                     #
# Info                                                                #
#                                                                     #
#######################################################################

#----------------------------------------------------------------------
# Configure Log4J using system properties and/or a properties file:
#----------------------------------------------------------------------

# - log4j.configuration=log4j.properties

# Use this system property to specify the name of a Log4J configuration file.
# If not specified, the default configuration file is log4j.properties.

# - log4j.rootCategory=priority [, appender]

# Set the default (root) logger priority.

# - log4j.logger.logger.name=priority

# Set the priority for the named logger and all loggers hierarchically
# lower than, or below, the named logger. 'logger.name' corresponds to
# the parameter of LogFactory.getLog('logger.name'), used to create the
# logger instance. Priorities are: DEBUG, INFO, WARN, ERROR, or FATAL.
# Log4J understands hierarchical names, enabling control by package or
# high-level qualifiers: log4j.logger.org.apache.component=DEBUG will
# enable debug messages for all classes in both org.apache.component
# and org.apache.component.sub. Likewise, setting log4j.logger.org.apache.component=DEBUG
# will enable debug message for all 'component' classes, but not for
# other Jakarta projects.

# - log4j.appender.appender.threshold=priority

# Log4J appenders correspond to different output devices: console, files,
# sockets, and others. If appender's threshold is less than or equal to the
# message priority then the message is written by that appender. This allows
# different levels of detail to be appear at different log destinations.
# For example: one can capture DEBUG (and higher) level information in a logfile,
# while limiting console output to INFO (and higher).

#----------------------------------------------------------------------
# Message Priorities/Levels
#----------------------------------------------------------------------

# FATAL - Severe errors that cause premature termination. Expect these to
#         be immediately visible on a status console.
# ERROR - Other runtime errors or unexpected conditions. Expect these to
#         be immediately visible on a status console.
# WARN  - Use of deprecated APIs, poor use of API, 'almost' errors, other
#         runtime situations that are undesirable or unexpected, but not
#         necessarily "wrong". Expect these to be immediately visible on
#         a status console.
# INFO  - Interesting runtime events (startup/shutdown). Expect these to
#         be immediately visible on a console, so be conservative and keep
#         to a minimum.
# DEBUG - Detailed information on the flow through the system. Expect these
#         to be written to logs only.
# TRACE - More detailed information. Expect these to be written to logs only.

#######################################################################
#                                                                     #
# Basic configuration                                                 #
#                                                                     #
#######################################################################

log4j.rootCategory=INFO, applicationLog

#----------------------------------------------------------------------
# FILE LOGGING
#----------------------------------------------------------------------
log4j.appender.applicationLog.threshold=${log4j.appender.applicationLog.threshold}
log4j.appender.applicationLog=org.apache.log4j.RollingFileAppender
log4j.appender.applicationLog.File=/apps/tix/logs/${log4j.appender.nomeApplicazione}/${log4j.appender.nomeFile}.log
log4j.appender.applicationLog.MaxFileSize=3MB
log4j.appender.applicationLog.MaxBackupIndex=5
log4j.appender.applicationLog.layout=org.apache.log4j.PatternLayout
log4j.appender.applicationLog.layout.ConversionPattern=<%-5p> [%d{ISO8601}] [%t] Metodo: %c{1}.%M - Messaggio=%m%n

#----------------------------------------------------------------------
# APPLICATION
#----------------------------------------------------------------------

log4j.logger.it.toscana.regione=ALL
log4j.logger.it.eldasoft=ALL
log4j.logger.it.eldasoft.gene.commons.web.spring.DataSourceTransactionManagerBase=WARN

#----------------------------------------------------------------------
# SQLMAP
#----------------------------------------------------------------------

log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG
log4j.logger.java.sql.ResultSet=DEBUG

#----------------------------------------------------------------------
# CONTROL LOGGING FOR OTHER OPEN SOURCE PACKAGES
#----------------------------------------------------------------------

log4j.logger.org.quartz=DEBUG
log4j.logger.org.apache.commons=ERROR
log4j.logger.org.apache.struts=WARN
log4j.logger.org.displaytag=ERROR
log4j.logger.org.springframework=DEBUG
log4j.logger.com.ibatis.db=WARN
log4j.logger.org.apache.velocity=FATAL
log4j.logger.org.owasp.csrfguard=ERROR
